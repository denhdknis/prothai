<!--Main layout-->
<main class="mt-10">
<!--Main container-->
<div class="container">
 <div class="row">
 <div class="col-md-12">

    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
      <!-- インジケータの設定 -->
        <ol class="carousel-indicators">
          <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
          <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
          <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
        </ol>
      <!-- スライドさせる画像の設定 -->
        <div class="carousel-inner">
          <div class="carousel-item active">
            <div><a href="#"><img class="img-fluid" src="https://www.tigermov.com/images/uploads/slider/slider_img25c3d8980c3708.png" ></a></div>
          </div><!-- /.carousel-item -->
          <div class="carousel-item">
            <div><a href="#"><img class="img-fluid" src="https://www.tigermov.com/images/uploads/slider/slider_img15c3d88bbbb9f7.png" ></a></div>
          </div><!-- /.carousel-item -->
          <div class="carousel-item">
             <div><a href="#"><img class="img-fluid" src="https://www.tigermov.com/images/uploads/slider/slider_img55c4917fe005ff.png" ></a></div>
          </div><!-- /.carousel-item -->
        </div><!-- /.carousel-inner -->
      <!-- スライドコントロールの設定 -->
        <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="sr-only">前へ</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="sr-only">次へ</span>
        </a>
    </div>
   <%= render 'common/search.html.erb' %>
  </div>

  </div>
    <!--Grid row-->
    <div class="row">
         <% @products.each do |product| %>
            <div class="col-sm-6 col-md-3 search" data-category='CMS' data-tag='["<%= product.c_country %>","<%= product.c_period.to_i %>"]'>
          <a href="/products/<%= product.id %>">
            <div class="card top20">
            <div class="sub_pic">
              <img class="card-img-top" src="<%= product.slider_photo1 %>" alt="">
              <span><%= product.c_country %></span>
            </div>
             <div class="card-body">
                <h5 class="card-title">
                <%= simple_format(product.c_title) %>
                </h5>
               <div class="card-footer text-black">
                 期間:<%= @periods[product.c_period.to_i] %>
               </div>
              </div>
            </div>
          </a>
          <!--/.Card-->
          </div>
         <% end %>
    <!--Grid column-->
    </div>
       <script>
            //絞り込み検索機能
              var searchBox = '.search-boxs'; // 絞り込む項目を選択するエリア
              var listItem = '.search';   // 絞り込み対象のアイテム
              var hideClass = 'is-hide';     // 絞り込み対象外の場合に付与されるclass名

              $(function() {
                  // 絞り込み項目を変更した時
                  $(document).on('change', searchBox + ' input', function() {
                    setTimeout(function(){
                      search_filter();
                    },1000);
                  });
              });

              /**
               * リストの絞り込みを行う
               */
              function search_filter() {
                  check_conunt = 0
                  // 非表示状態を解除
                  $(listItem).removeClass(hideClass);
                  for (var i = 0; i < $(searchBox).length; i++) {
                      var name = $(searchBox).eq(i).find('input').attr('name');
                      // 選択されている項目を取得
                      var searchData = get_selected_input_items(name);
                      // 選択されている項目がない、またはALLを選択している場合は飛ばす
                      if(searchData.length === 0 || searchData[0] === '') {
                          continue;
                      }
                      // リスト内の各アイテムをチェック
                      for (var j = 0; j < $(listItem).length; j++) {
                        // console.log($(listItem).length);
                          // アイテムに設定している項目を取得
                          //引数でタグとカテゴリをget_setting_values_in_itemまで渡している
                          var itemData = get_setting_values_in_item($(listItem).eq(j), name);
                          console.log(itemData);
                          // 絞り込み対象かどうかを調べる
                          var check = array_match_check(itemData, searchData);
                          if(!check) {
                            $(listItem).eq(j).addClass(hideClass);
                          }
                      }
                  }
              }

              /**
               * inputで選択されている値の一覧を取得する
               * @param  {String} name 対象にするinputのname属性の値
               * @return {Array}       選択されているinputのvalue属性の値
               */
              function get_selected_input_items(name) {
                  var searchData = [];
                  $('[name=' + name + ']:checked').each(function() {
                      searchData.push($(this).val());
                  });
                  // console.log(searchData);
                  return searchData;
              }

              /**
               * リスト内のアイテムに設定している値の一覧を取得する
               * @param  {Object} target 対象にするアイテムのjQueryオブジェクト
               * @param  {String} data   対象にするアイテムのdata属性の名前
               * @return {Array}         対象にするアイテムのdata属性の値
               */
              function get_setting_values_in_item(target,data) {
                  var itemData = target.data(data);
                  if(!Array.isArray(itemData)) {
                      itemData = [itemData];
                  }
                  // console.log(itemData);
                  return itemData;
              }

              /**
               * 2つの配列内で一致する文字列があるかどうかを調べる
               * @param  {Array} arr1 調べる配列1
               * @param  {Array} arr2 調べる配列2
               * @return {Boolean}    一致する値があるかどうか
               */
              function array_match_check(arr1, arr2) {
                  // 絞り込み対象かどうかを調べる
                  var arrCheck = false;
                  for (var i = 0; i < arr1.length; i++) {
                      if(arr2.indexOf(arr1[i]) >= 0) {
                          arrCheck = true;
                          break;
                      }
                  }
                   // console.log(arrCheck);
                  return arrCheck;
              }
            </script>
<!--Grid row-->
</div>
<!--Main container-->
</main>
<!--Main layout-->

