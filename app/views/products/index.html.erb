

<!--Main layout-->
<main class="mt-5">
<!--Main container-->
<div class="slider">
        <div class="slideSet">
            <div class="slide01 slide">
              <div class="view overlay z-depth-1-half">
               <img src="https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg" class="img-fluid">
                <div class="mask rgba-white-light">
              
                </div>
              </div>
            </div>

            <div class="slide02 slide">
              <div class="view overlay z-depth-1-half">
               <img src="https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(74).jpg" class="img-fluid">
                <div class="mask rgba-white-light">
                </div>
              </div>
            </div>

            <div class="slide03 slide">
            <div class="view overlay z-depth-1-half">
               <img src="https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(72).jpg" class="img-fluid">
                <div class="mask rgba-white-light">
                </div>
              </div>
            </div>

            <div class="slide04 slide">
            <div class="view overlay z-depth-1-half">
               <img src="https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(71).jpg" class="img-fluid">
                <div class="mask rgba-white-light">
                </div>
              </div>
            </div>

            <div class="slide05 slide">
             <div class="view overlay z-depth-1-half">
               <img src="https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(73).jpg" class="img-fluid">
                <div class="mask rgba-white-light">
                </div>
              </div>
            </div>
            
        </div>
    </div>
    <button class="slider-prev">前へ</button>
    <button class="slider-next">次へ</button>
    <script>
      (function(){
        var slideWidth = $('.slide').outerWidth();  // .slideの幅を取得して代入
        var slideNum = $('.slide').length;  // .slideの数を取得して代入
        var slideSetWidth = slideWidth * slideNum;  // .slideの幅×数で求めた値を代入
        $('.slideSet').css('width', slideSetWidth); // .slideSetのスタイルシートにwidth: slideSetWidthを指定
        var slideCurrent = 0; // 現在地を示す変数
        // アニメーションを実行する独自関数
        var sliding = function(){
        // slideCurrentが0以下だったら
        if( slideCurrent < 0 ){
        slideCurrent = slideNum - 1;
        // slideCurrentがslideNumを超えたら
        }else if( slideCurrent > slideNum - 1 ){  // slideCUrrent >= slideNumでも可
        slideCurrent = 0;
        }
        $('.slideSet').stop().animate({
        left: slideCurrent * -slideWidth
        });
        }
        // 前へボタンが押されたとき
        $('.slider-prev').click(function(){
        slideCurrent--;
        sliding();
        });
        // 次へボタンが押されたとき
        $('.slider-next').click(function(){
        slideCurrent++;
        sliding();
        });
        }());
    </script>
<div class="container">
    <div class="row">

        <!--Grid column-->
        <div class="col-md-7">


        </div>

        <!--Grid column-->
       <div class="col-md-5">
          <h2>Some awesome heading</h2>
  <a href="https://mdbootstrap.com/" class="btn btn-primary">Get it now!</a>

        </div>
        <!--Grid column-->

    </div>
    <!--Grid row-->
<div class="row">
<div class="col-md-12">
 <%= render 'common/search.html.erb' %>
</div>
</div>
    <!--Grid row-->
<div class="row">

  <!--Grid column-->
  <% @products.each do |product| %>
   <div class="col-lg-3 card" data-category='CMS' data-tag='["<%= product.country %>","<%= product.period.to_i %>"]'>
              <a href="/products/<%= product.id %>">
      <div class="view overlay">
        <img src="<%= product.top_pictures %>" class="card-img" alt=""><span><%= product.country %></span>
        <a href="#">
          <div class="mask rgba-white-slight"></div>
        </a>
      </div>

                  <div class="card-content">
                    <h1 class="card-title"><%= product.title %></h1>
                     <p class="card-text">期間:<%= @periods[product.period.to_i] %></p>
                  </div>
        <!--/.Card-->
                </a>
          </div>
   <% end %>
  <!--Grid column-->
</div>
 <script>
            //絞り込み検索機能
              var searchBox = '.search-boxs'; // 絞り込む項目を選択するエリア
              var listItem = '.card';   // 絞り込み対象のアイテム
              var hideClass = 'is-hide';     // 絞り込み対象外の場合に付与されるclass名

              $(function() {
                  // 絞り込み項目を変更した時
                  $(document).on('change', searchBox + ' input', function() {
                    setTimeout(function(){
                      search_filter();
                    },1000);
                  });
              });

              /**
               * リストの絞り込みを行う
               */
              function search_filter() {
                  check_conunt = 0
                  // 非表示状態を解除
                  $(listItem).removeClass(hideClass);
                  for (var i = 0; i < $(searchBox).length; i++) {
                      var name = $(searchBox).eq(i).find('input').attr('name');
                      // 選択されている項目を取得
                      var searchData = get_selected_input_items(name);
                      // 選択されている項目がない、またはALLを選択している場合は飛ばす
                      if(searchData.length === 0 || searchData[0] === '') {
                          continue;
                      }
                      // リスト内の各アイテムをチェック
                      for (var j = 0; j < $(listItem).length; j++) {
                        // console.log($(listItem).length);
                          // アイテムに設定している項目を取得
                          //引数でタグとカテゴリをget_setting_values_in_itemまで渡している
                          var itemData = get_setting_values_in_item($(listItem).eq(j), name);
                          console.log(itemData);
                          // 絞り込み対象かどうかを調べる
                          var check = array_match_check(itemData, searchData);
                          if(!check) {
                            $(listItem).eq(j).addClass(hideClass);
                          }
                      }
                  }
              }

              /**
               * inputで選択されている値の一覧を取得する
               * @param  {String} name 対象にするinputのname属性の値
               * @return {Array}       選択されているinputのvalue属性の値
               */
              function get_selected_input_items(name) {
                  var searchData = [];
                  $('[name=' + name + ']:checked').each(function() {
                      searchData.push($(this).val());
                  });
                  // console.log(searchData);
                  return searchData;
              }

              /**
               * リスト内のアイテムに設定している値の一覧を取得する
               * @param  {Object} target 対象にするアイテムのjQueryオブジェクト
               * @param  {String} data   対象にするアイテムのdata属性の名前
               * @return {Array}         対象にするアイテムのdata属性の値
               */
              function get_setting_values_in_item(target,data) {
                  var itemData = target.data(data);
                  if(!Array.isArray(itemData)) {
                      itemData = [itemData];
                  }
                  // console.log(itemData);
                  return itemData;
              }

              /**
               * 2つの配列内で一致する文字列があるかどうかを調べる
               * @param  {Array} arr1 調べる配列1
               * @param  {Array} arr2 調べる配列2
               * @return {Boolean}    一致する値があるかどうか
               */
              function array_match_check(arr1, arr2) {
                  // 絞り込み対象かどうかを調べる
                  var arrCheck = false;
                  for (var i = 0; i < arr1.length; i++) {
                      if(arr2.indexOf(arr1[i]) >= 0) {
                          arrCheck = true;
                          break;
                      }
                  }
                   // console.log(arrCheck);
                  return arrCheck;
              }
            </script>
<!--Grid row-->
</div>
<!--Main container-->
</main>
<!--Main layout-->

